-- SELECT
--     od.id AS order_detail_id,
--     o.id AS order_id,
--     o.date AS order_date,
--     c.name AS customer_name,
--     e.first_name AS e_name,
--     s.name AS shipper_name,
--     p.name AS product_name,
--     p.price AS product_price,
--     cat.name AS category_name,
--     sup.name AS supplier_name,
--     od.quantity AS quantity
-- FROM order_details od
-- INNER JOIN orders o ON od.order_id = o.id
-- INNER JOIN customers c ON o.customer_id = c.id
-- INNER JOIN employees e ON o.employee_id = e.employee_id
-- INNER JOIN shippers s ON o.shipper_id = s.id
-- INNER JOIN products p ON od.product_id = p.id
-- INNER JOIN categories cat ON p.category_id = cat.id
-- INNER JOIN suppliers sup ON p.supplier_id = sup.id;

-- SELECT COUNT(*) AS total_rows
-- FROM order_details od
-- INNER JOIN orders o ON od.order_id = o.id
-- INNER JOIN customers c ON o.customer_id = c.id
-- INNER JOIN employees e ON o.employee_id = e.employee_id
-- INNER JOIN shippers s ON o.shipper_id = s.id
-- INNER JOIN products p ON od.product_id = p.id
-- INNER JOIN categories cat ON p.category_id = cat.id
-- INNER JOIN suppliers sup ON p.supplier_id = sup.id;


-- SELECT COUNT(*) AS total_rows
-- FROM order_details od
-- RIGHT JOIN orders o ON od.order_id = o.id
-- RIGHT JOIN customers c ON o.customer_id = c.id
-- RIGHT JOIN employees e ON o.employee_id = e.employee_id
-- RIGHT JOIN shippers s ON o.shipper_id = s.id
-- RIGHT JOIN products p ON od.product_id = p.id
-- RIGHT JOIN categories cat ON p.category_id = cat.id
-- RIGHT JOIN suppliers sup ON p.supplier_id = sup.id;

При використанні LEFT JOIN загальна кількість рядків, як правило, зростає, оскільки включаються всі рядки з лівої таблиці, навіть якщо немає збігів у правій.
У нашому випадку кількість рядків завжди дорівнює 518 незалежно від використання INNER JOIN або LEFT JOIN, через те що всі рядки в основній таблиці order_details мають відповідності в інших таблицях (нема значень NULL у приєднаних таблицях).

-- SELECT 
--     od.id AS order_detail_id,
--     o.id AS order_id,
--     o.date AS order_date,
--     c.name AS customer_name,
--     e.first_name AS e_name,
--     e.last_name AS employee_last_name,
--     s.name AS shipper_name,
--     p.name AS product_name,
--     p.price AS product_price,
--     cat.name AS category_name,
--     sup.name AS supplier_name,
--     od.quantity AS quantity
-- FROM order_details od
-- INNER JOIN orders o ON od.order_id = o.id
-- INNER JOIN customers c ON o.customer_id = c.id
-- INNER JOIN employees e ON o.employee_id = e.employee_id
-- INNER JOIN shippers s ON o.shipper_id = s.id
-- INNER JOIN products p ON od.product_id = p.id
-- INNER JOIN categories cat ON p.category_id = cat.id
-- INNER JOIN suppliers sup ON p.supplier_id = sup.id
-- WHERE e.employee_id > 3 AND e.employee_id <= 10;

-- SELECT 
--     cat.name AS category_name,
--     COUNT(*) AS row_count,
--     AVG(od.quantity) AS avg_quantity
-- FROM order_details od
-- INNER JOIN products as p ON od.product_id = p.id
-- INNER JOIN categories as cat ON p.category_id = cat.id
-- GROUP BY cat.name;

-- SELECT 
--     cat.name AS category_name,
--     COUNT(*) AS row_count,
--     AVG(od.quantity) AS avg_quantity
-- FROM order_details AS od
-- INNER JOIN products AS p ON od.product_id = p.id
-- INNER JOIN categories AS cat ON p.category_id = cat.id
-- GROUP BY cat.name
-- HAVING AVG(od.quantity) > 21;


-- SELECT 
--     cat.name AS category_name,
--     COUNT(*) AS row_count,
--     AVG(od.quantity) AS avg_quantity
-- FROM order_details AS od
-- INNER JOIN products AS p ON od.product_id = p.id
-- INNER JOIN categories AS cat ON p.category_id = cat.id
-- GROUP BY cat.name
-- HAVING AVG(od.quantity) > 21
-- ORDER BY row_count DESC;

SELECT 
    cat.name AS category_name,
    COUNT(*) AS row_count,
    AVG(od.quantity) AS avg_quantity
FROM order_details AS od
INNER JOIN products AS p ON od.product_id = p.id
INNER JOIN categories AS cat ON p.category_id = cat.id
GROUP BY cat.name
HAVING AVG(od.quantity) > 21
ORDER BY row_count DESC
LIMIT 4 OFFSET 1;
